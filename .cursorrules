{
  "projectType": "medical-system",
  "framework": {
    "name": "Next.js",
    "version": "15.x"
  },
  "expertise": {
    "technologies": [
      "ReactJS",
      "NextJS",
      "Prisma",
      "JavaScript",
      "TypeScript",
      "HTML",
      "CSS",
      "TailwindCSS"
    ]
  },
  "projectStructure": {
    "components": "lib/components",
    "formComponents": "lib/components/controlled-form-components",
    "actions": "lib/actions",
    "validation": "lib/validation",
    "i18n": {
      "messages": "messages",
      "config": "i18n"
    }
  },
  "codingGuidelines": {
    "general": [
      "Use early returns for better readability",
      "Follow DRY principle",
      "Ensure code completeness",
      "Include all required imports",
      "Use proper component naming"
    ],
    "styling": [
      "Use Tailwind classes exclusively",
      "Prefer class: over ternary operators"
    ],
    "naming": {
      "eventHandlers": "prefix with 'handle' (e.g., handleClick)",
      "functions": "use const arrow functions"
    },
    "accessibility": {
      "required": [
        "tabindex",
        "aria-label",
        "onClick",
        "onKeyDown"
      ]
    }
  },
  "nextjsFeatures": {
    "components": [
      "server-components",
      "client-components"
    ],
    "routing": [
      "dynamic-routes",
      "middleware",
      "redirects"
    ],
    "optimization": [
      "dynamic-imports",
      "dynamic-metadata",
      "dynamic-seo"
    ]
  },
  "rules": [
    {
      "name": "next-15-params-handling",
      "description": "Ensure Next.js 15 route component params are properly typed and handled",
      "pattern": {
        "find": "params: Promise<{ locale: string }>",
        "replace": "params: { locale: string }"
      },
      "message": "Next.js 15 route params should be directly accessible without Promise typing",
      "examples": {
        "incorrect": [
          "export default async function Page({ params }: { params: Promise<{ locale: string }> }) {",
          "const { locale } = await params;"
        ],
        "correct": [
          "export default async function Page({ params }: { params: { locale: string } }) {",
          "const { locale } = params;"
        ]
      },
      "severity": "error",
      "filePatterns": [
        "app/**/page.tsx",
        "app/**/layout.tsx"
      ],
      "autofix": true
    }
  ]
}
