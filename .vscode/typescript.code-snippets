{
  "Zod Base Schema Snippet": {
    "prefix": "zodBaseSchema",
    "body": [
      "import { z } from 'zod';",
      "import { requiredText } from './helpers/translations';",
      "import { requiredDateValidation, validatePatientDate } from './helpers/validators';",
      "",
      "const ${1:value}BaseSchema = z.object({});",
      "",
      "export const create${1/(.*)/${1:/capitalize}/}ClientSchema = ${1}BaseSchema;",
      "export const update${1/(.*)/${1:/capitalize}/}ClientSchema = ${1}BaseSchema.partial().extend({",
      "  id: z.number().int(requiredText).positive(requiredText),",
      "});",
      "",
      "export type Create${1/(.*)/${1:/capitalize}/}ClientSchema = z.infer<typeof create${1/(.*)/${1:/capitalize}/}ClientSchema>;",
      "export type Update${1/(.*)/${1:/capitalize}/}ClientSchema = z.infer<typeof update${1/(.*)/${1:/capitalize}/}ClientSchema>;",
      "",
      "",
      "const checkDate = async (",
      "  data: Create${1/(.*)/${1:/capitalize}/}ClientSchema | Update${1/(.*)/${1:/capitalize}/}ClientSchema,",
      "  ctx: z.RefinementCtx",
      ") => {",
      "  await validatePatientDate(ctx, {",
      "    patient_id: data.patient_id!,",
      "    date: data.check_date!,",
      "    dateField: 'check_date',",
      "  });",
      "};",
      "",
      "export const create${1/(.*)/${1:/capitalize}/}ServerSchema = create${1/(.*)/${1:/capitalize}/}ClientSchema.superRefine(checkDate);",
      "export const update${1/(.*)/${1:/capitalize}/}ServerSchema = update${1/(.*)/${1:/capitalize}/}ClientSchema.superRefine(checkDate);",
    ],
    "description": "Snippet for Zod Base Schema for MSPS project",
  },
  "Input": {
    "prefix": "xInput",
    "body": [
      "<ControlledInput",
      "  name=\"$1\"",
      "  label=\"$2\"",
      "  control={control}",
      "  rules={{ required: true }}",
      "/>",
    ],
    "description": "Snippet for ControlledInput component",
  },
  "TextArea": {
    "prefix": "xTextArea",
    "body": ["<ControlledTextArea", "  name=\"$1\"", "  label=\"$2\"", "  control={control}", "/>"],
    "description": "Snippet for ControlledTextArea component",
  },
  "Checkbox": {
    "prefix": "xCheckbox",
    "body": ["<ControlledCheckbox", "  name=\"$1\"", "  label=\"$2\"", "  control={control}", "/>"],
    "description": "Snippet for ControlledCheckbox component",
  },
  "DateInput": {
    "prefix": "xDateInput",
    "body": [
      "<ControlledDateInput",
      "  name=\"$1\"",
      "  label=\"$2\"",
      "  control={control}",
      "  rules={{ required: true }}",
      "/>",
    ],
    "description": "Snippet for ControlledDateInput component",
  },
  "RadioGroup": {
    "prefix": "xRadioGroup",
    "body": [
      "<ControlledRadioGroup",
      "  name=\"$1\"",
      "  label=\"$2\"",
      "  control={control}",
      "  rules={{ required: true }}",
      "  items={[",
      "    { value: '', label: '' },",
      "    { value: '', label: '' },",
      "  ]}",
      "/>",
    ],
    "description": "Snippet for ControlledRadioGroup component",
  },
  "Select": {
    "prefix": "xSelect",
    "body": [
      "<ControlledSelect",
      "  name=\"$1\"",
      "  label=\"$2\"",
      "  control={control}",
      "  rules={{ required: true }}",
      "  items={[",
      "    { id: '', name: '' },",
      "    { id: '', name: '' },",
      "  ]}",
      "/>",
    ],
    "description": "Snippet for ControlledSelect component",
  },
  "PatientSelector": {
    "prefix": "xPatientSelector",
    "body": [
      "<ControlledPatientSelector",
      "  name=\"$1\"",
      "  label=\"$2\"",
      "  control={control}",
      "  rules={{ required: true }}",
      "/>",
    ],
    "description": "Snippet for ControlledPatientSelector component",
  },
}
